version: '3.8'
services:
  mongo:
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 10s
    networks:
      - app-network

  # redis:
  #   image: redis
  #   ports:
  #     - "127.0.0.1:6380:6379"
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #     start_period: 10s
  #   volumes:
  #     - redis-data:/data
  #   networks:
  #     - app-network

  backend:
    build:
      context: ./backend
    ports:
      - "3001:3000"
    env_file:
      - ./backend/.env
    depends_on:
      mongo:
        condition: service_healthy
      # redis:
      #   condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 10s
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - app-network
    dns:
      - 2606:4700:4700::64  # Cloudflare DNS64
      - 2001:4860:4860::6464  # Google DNS64

  frontend:
    build: ./frontend
    ports:
      - "127.0.0.1:5173:5173"
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
    enable_ipv6: true

volumes:
  mongo-data:
  # redis-data: